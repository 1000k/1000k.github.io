<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1000g</title>
    <link>http://1000k.github.io/categories/jquery/index.xml</link>
    <description>Recent content on 1000g</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Released under the MIT license.</copyright>
    <atom:link href="http://1000k.github.io/categories/jquery/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>残り時間をプログレスバーで表示するチュートリアル</title>
      <link>http://1000k.github.io/2013/12/18/display-remaining-time-by-progress-bar/</link>
      <pubDate>Wed, 18 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2013/12/18/display-remaining-time-by-progress-bar/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://e.ggtimer.com/&#34;&gt;E.gg Timer&lt;/a&gt; のようなタイマーアプリを作りたかったので、プログレスバーの作り方を調べました。タイマーそのものより、progress タグのスタイルシートをクロスブラウザ対応させるのに苦労しました。&lt;/p&gt;

&lt;p&gt;今回作ったのは下の画像のような簡単なタイマーです。経過時間に合わせてプログレスバーが赤くなります。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://1000k.github.io/img/timer.png&#34;  /&gt;
    
    
    &lt;figcaption&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;&lt;a href=&#34;http://jsfiddle.net/tcxx9/3/&#34;&gt;デモはこちら。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;なお、IE11, Firefox26, Chrome31 で動作を確認しています。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;実装コード&#34;&gt;実装コード&lt;/h2&gt;

&lt;h3 id=&#34;html&#34;&gt;HTML&lt;/h3&gt;

&lt;p&gt;プログレスバー、時間入力欄、開始/停止ボタンがあるだけです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;progressWrapper&amp;quot;&amp;gt;
  &amp;lt;progress id=&amp;quot;bar&amp;quot; value=&amp;quot;0&amp;quot; max=&amp;quot;1000&amp;quot; min=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/progress&amp;gt;

&amp;lt;/div&amp;gt;



&amp;lt;fieldset&amp;gt;
  Time (msec): &amp;lt;input type=&amp;quot;text&amp;quot; value=&amp;quot;5000&amp;quot; id=&amp;quot;time&amp;quot; /&amp;gt;

    &amp;lt;button id =&amp;quot;start&amp;quot;&amp;gt;start&amp;lt;/button&amp;gt;
    &amp;lt;button id =&amp;quot;stop&amp;quot;&amp;gt;stop&amp;lt;/button&amp;gt;

&amp;lt;/fieldset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;javascript&#34;&gt;JavaScript&lt;/h3&gt;

&lt;p&gt;jQuery 1.10.2 で試しました。経過時間に合わせて progress タグの value 要素を増やしていくだけです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var timer,
  limitMs = 0,
  restMs = 0,
  resolutionMs = 50,    /* NOTE: Too small value does not work on IE11. */
  maxBar;

var countdown = function() {
  restMs -= resolutionMs;

  var restRate = (limitMs - restMs) / limitMs;
  var restBarLength = maxBar * restRate

  $(&#39;#bar&#39;).attr(&#39;value&#39;, restBarLength);

  if (restMs &amp;lt; 0) {
    resetTimer();
    alert(&#39;time expired&#39;);
  }
};

var resetTimer = function() {
  clearInterval(timer);
  limitMs = restMs = $(&#39;#time&#39;).val();
  $(&#39;#bar&#39;).attr(&#39;value&#39;, 0);
};

$(function() {
  maxBar = $(&#39;#bar&#39;).attr(&#39;max&#39;);

  $(&#39;#start&#39;).on(&#39;click&#39;, function() {
    resetTimer();
    timer = setInterval(&#39;countdown()&#39;, resolutionMs);
  });

  $(&#39;#stop&#39;).on(&#39;click&#39;, function() {
    resetTimer();
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ひとつだけ IE11 でバグがありました。&lt;code&gt;resolutionMs&lt;/code&gt; (タイマーを更新する間隔) を10ミリ秒以下にすると、赤いバーが全く表示されなくなりました。50ミリ秒ならなんとか描画されました。&lt;/p&gt;

&lt;p&gt;どうも IE11 ではバーの表示を勝手に加速度を付けて滑らかにする機能が付いているのですが、これが悪さをしているようです。デバッグしてみると value 属性は間違いなく増加しているのですが、画面には反映されませんでした。IE ユーザーはご注意ください。&lt;/p&gt;

&lt;h3 id=&#34;css&#34;&gt;CSS&lt;/h3&gt;

&lt;p&gt;progress 要素はブラウザ毎に属性の解釈が結構異なります。Opera は面倒なので試してません。すいません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.progressWrapper {
  width: 100%;
}

progress {
  /* Turn off default styling. */
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  border: 0;

  height: 10px;
  width: 100%;
  color: red;       /* IE */
  background: navy; /* Firefox */
}

/* Chrome needs &#39;-webkit-progress-value&#39; and &#39;-webkit-progress-bar&#39; attributes. */
progress::-webkit-progress-value {
  background: red;
}

progress::-webkit-progress-bar {
  background: navy;
}

/* Firefox needs only &#39;-moz-progress-bar&#39; attiribute. */
progress::-moz-progress-bar {
  background: red;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hongkiat.com/blog/html5-progress-bar/&#34;&gt;Creating &amp;amp; Styling Progress Bar With HTML5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pori2.net/js/timer/6.html&#34;&gt;カウントダウンタイマー－JavaScript入門&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.useragentman.com/blog/2012/01/03/cross-browser-html5-progress-bars-in-depth/&#34;&gt;Cross Browser HTML5 Progress Bars In Depth&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;カウントダウンに合わせて動くサルのアニメや、スピードメーターの書き方など。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://css-tricks.com/html5-progress-element/&#34;&gt;The HTML5 progress Element | CSS-Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/ja/docs/Web/CSS/::-moz-progress-bar&#34;&gt;::-moz-progress-bar - CSS | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQMでアクセス中のページがトップページかどうか判別する</title>
      <link>http://1000k.github.io/2012/10/21/how-to-detect-the-page-is-homepage-or-not-in-jqm/</link>
      <pubDate>Sat, 20 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2012/10/21/how-to-detect-the-page-is-homepage-or-not-in-jqm/</guid>
      <description>&lt;p&gt;現在アクセスしているURLがアプリのトップページか否かを判断するには、どうすればいいでしょうか？&lt;/p&gt;

&lt;p&gt;jQuery Mobile では id 属性を使ってページを識別するため、簡単に判断できます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;やりたいこと&#34;&gt;やりたいこと&lt;/h2&gt;

&lt;p&gt;今アクセスしているURLが、アプリのトップページかどうか判別する関数を作る。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;トップページなら true&lt;/li&gt;
&lt;li&gt;それ以外なら false&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;コード&#34;&gt;コード&lt;/h2&gt;

&lt;p&gt;トップページの id 属性が「top」という想定で進めます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div data-role=&amp;quot;page&amp;quot; id=&amp;quot;top&amp;quot; data-title=&amp;quot;top page&amp;quot;&amp;gt;
  &amp;lt;div data-role=&amp;quot;header&amp;quot;&amp;gt;

  &amp;lt;/div&amp;gt;



  &amp;lt;div data-role=&amp;quot;content&amp;quot;&amp;gt;

  &amp;lt;/div&amp;gt;


&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;jQuery Mobile はページにアクセス時、画面を描画する前にページの構造を取得します。&lt;/p&gt;

&lt;p&gt;つまり、今アクセスしているページの id 属性を取得できるので、これが top かそうでないかを判別すればOKです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/**
 * アクセスしたページがトップページかどうか判別する
 *
 * @return {boolean} トップページなら true
 */
function isTop() {
    return $(&amp;quot;:jqmData(role=&#39;page&#39;)&amp;quot;).attr(&amp;quot;id&amp;quot;) === &amp;quot;top&amp;quot;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;jQuery Mobile では data-* 属性を取得する時にはカスタムセレクタの jqmData() を使うのが作法なので、このような書き方になります。（下記の参考リンク内の「$.fn.jqmData()」参照）&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://jquerymobile.com/test/docs/api/methods.html&#34;&gt;jQuery Mobile Docs - Methods&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jQM &#43; Google Maps でマップが表示されない時の対処法</title>
      <link>http://1000k.github.io/2012/10/14/jqm-remedy-when-the-map-does-not-appear-in-google-maps/</link>
      <pubDate>Sun, 14 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2012/10/14/jqm-remedy-when-the-map-does-not-appear-in-google-maps/</guid>
      <description>&lt;p&gt;jQuery Mobile 1.2.0 Final での不具合です。&lt;/p&gt;

&lt;p&gt;jQuery Mobile と Google Maps API の相性がいまいち良くないようで、いろいろな所で不具合が出ます。&lt;/p&gt;

&lt;p&gt;今回発見したのは、フォーム画面から戻ってくるとマップが表示されない問題です。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;マップが設置されたページからフォーム画面へ遷移する&lt;/li&gt;
&lt;li&gt;フォームの値をPOSTして元のページへ戻る&lt;/li&gt;
&lt;li&gt;マップが表示されない&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Google Maps と統合するサービスには致命的になりかねない不具合です。&lt;/p&gt;

&lt;p&gt;以下に不具合の検証用コードと、かなり妥協した解決案を記します。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;検証用コード&#34;&gt;検証用コード&lt;/h2&gt;

&lt;h3 id=&#34;gmap1-html&#34;&gt;gmap1.html&lt;/h3&gt;

&lt;p&gt;マップを表示するページです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;






&amp;lt;div data-role=&amp;quot;page&amp;quot; data-theme=&amp;quot;a&amp;quot; id=&amp;quot;page1&amp;quot;&amp;gt;
  &amp;lt;div data-role=&amp;quot;content&amp;quot;&amp;gt;
    &amp;lt;div id=&amp;quot;map_canvas&amp;quot;&amp;gt;

    &amp;lt;/div&amp;gt;


    &amp;lt;a href=&amp;quot;gmap2.html&amp;quot; data-role=&amp;quot;button&amp;quot; data-rel=&amp;quot;dialog&amp;quot;&amp;gt;Go to gmap2.html&amp;lt;/a&amp;gt;

  &amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;gmap2-html&#34;&gt;gmap2.html&lt;/h3&gt;

&lt;p&gt;フォーム画面。今回は dialog を使いました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;





&amp;lt;div data-role=&amp;quot;dialog&amp;quot; data-theme=&amp;quot;a&amp;quot; id=&amp;quot;page2&amp;quot;&amp;gt;
  &amp;lt;/form&amp;gt;

          &amp;lt;a href=&amp;quot;gmap1.html&amp;quot; data-role=&amp;quot;button&amp;quot; data-rel=&amp;quot;back&amp;quot;&amp;gt;back to gmap1.html&amp;lt;/a&amp;gt;

&amp;lt;/div&amp;gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これらのページを設置し、「gmap1.html -&amp;gt; gmap2.html -&amp;gt; gmap1.html」という遷移をすると、2回目の gmap1.html でマップが表示されません。&lt;/p&gt;

&lt;h2 id=&#34;解決案&#34;&gt;解決案&lt;/h2&gt;

&lt;p&gt;jQuery Mobile が内部で Ajax をガチャガチャやっているのが悪影響を及ぼしているようなので、Ajaxをオフにすれば治りました。&lt;/p&gt;

&lt;p&gt;上記のコードで、「// $.mobile.ajaxEnabled = false;」となっている部分をコメントアウトすればOKです。&lt;/p&gt;

&lt;h3 id=&#34;gmap1-html-1&#34;&gt;gmap1.html&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$.mobile.ajaxEnabled = false;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;gmap2-html-1&#34;&gt;gmap2.html&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$.mobile.ajaxEnabled = false;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この対応によりマップは表示されるようになりますが、画面遷移時のエフェクトを始めとしたもろもろの機能が使えなくなります。&lt;/p&gt;

&lt;p&gt;非常に心苦しい対応ですが、今のところこれぐらいしか思いつきませんでした。&lt;/p&gt;

&lt;p&gt;なお、全ページにこの1行を書くのは面倒なので、外部JSファイルに以下の指定をして全ページのhead内で読み込むようにすれば楽です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(document).bind(&amp;quot;pageinit&amp;quot;, function() {
  $.mobile.ajaxEnabled = false;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jquerymobile.com/test/docs/api/globalconfig.html&#34;&gt;jQuery Mobile Docs - Configuring default settings&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;$.mobile.ajaxEnabled のリファレンス。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://code.google.com/p/jquery-ui-map/wiki/jquery_ui_map_v_3_tutorial&#34;&gt;jquery_ui_map_v_3_tutorial - jquery-ui-map - Google map v3 plugin for jQuery and jQuery Mobile - Google Project Hosting&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;「Help, my map is rendered incorrectly! (jQM)」に同じ不具合の対処法が書いてありました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jQuery Mobileでリストビューを動的に挿入する方法</title>
      <link>http://1000k.github.io/2012/10/14/how-to-dynamically-insert-the-list-view-in-the-jquery-mobile/</link>
      <pubDate>Sun, 14 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2012/10/14/how-to-dynamically-insert-the-list-view-in-the-jquery-mobile/</guid>
      <description>&lt;p&gt;jQuery Mobile 1.2 を使ってリストビューを動的に挿入する手順を紹介します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jquerymobile.com/test/docs/pages/page-dynamic.html&#34;&gt;公式マニュアル&lt;/a&gt;にもやり方は書いてあるのですが、本題と関係ない部分（リンクをクリックしたらその取得先を正規表現で取得するなど）が長く読みづらいので、もっと簡単なバージョンを書きました。&lt;/p&gt;

&lt;h2 id=&#34;やりたいこと&#34;&gt;やりたいこと&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;「Inject!」ボタンを押す&lt;/li&gt;
&lt;li&gt;「data-role=&amp;ldquo;content&amp;rdquo;」内にリストビューを挿入する&lt;/li&gt;
&lt;li&gt;画面遷移せずに表示する&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;画面イメージはこんな感じです。↓&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://1000k.github.io/img/dynamic_injection1.png&#34;  /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;「Inject!」をクリックすると、ヘッダとコンテンツが書き換えられます。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://1000k.github.io/img/dynamic_injection2.png&#34;  /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;サンプルコード&#34;&gt;サンプルコード&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;






&amp;lt;div data-role=&amp;quot;page&amp;quot; id=&amp;quot;page1&amp;quot;&amp;gt;
  &amp;lt;div data-role=&amp;quot;header&amp;quot;&amp;gt;
    &amp;lt;h1&amp;gt;
      Dynamic Injection
    &amp;lt;/h1&amp;gt;

  &amp;lt;/div&amp;gt;



  &amp;lt;div data-role=&amp;quot;content&amp;quot;&amp;gt;
    &amp;lt;a href=&amp;quot;#&amp;quot; data-role=&amp;quot;button&amp;quot; id=&amp;quot;inject&amp;quot;&amp;gt;Inject!&amp;lt;/a&amp;gt;

  &amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;処理の内容を細かく見てみましょう。&lt;/p&gt;

&lt;h3 id=&#34;クリックイベントをバインドする&#34;&gt;クリックイベントをバインドする&lt;/h3&gt;

&lt;p&gt;はじめに、「Inject!」ボタンをクリックした時に showList() 関数を呼び出すようにバインドします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&amp;quot;#inject&amp;quot;).live(&amp;quot;click&amp;quot;, function() {
  showList();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次に showList() の中身を見てみます。&lt;/p&gt;

&lt;h3 id=&#34;dom要素を格納する&#34;&gt;DOM要素を格納する&lt;/h3&gt;

&lt;p&gt;まずはページ内の各要素のDOM要素を変数に格納しておきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var $page = $(&amp;quot;#page1&amp;quot;),
      $header = $page.children(&amp;quot;:jqmData(role=header)&amp;quot;),
      $content = $page.children(&amp;quot;:jqmData(role=content)&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ちなみにこの「:jqmData()」はjQuery Mobile 用のカスタムセレクタです。&lt;/p&gt;

&lt;p&gt;意味は「$page.childern(&amp;rdquo;[data-role=header]&amp;ldquo;)」と同じなのですが、jQM独自の「data-*」という要素をセレクトしたい場合はこちらを使う方が良いそうです。&lt;/p&gt;

&lt;p&gt;詳しくは下記のマニュアルを参照してください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://dev.screw-axis.com/doc/jquery_mobile/api/methods_utilities/methods/jqmData/&#34;&gt;jqmData | jQuery Mobile 1.1.0 日本語リファレンス&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;リストビューを生成する&#34;&gt;リストビューを生成する&lt;/h3&gt;

&lt;p&gt;続いてリストビューのDOM要素を生成します。&lt;/p&gt;

&lt;p&gt;jQueryのメソッドチェーンを使って作成すると楽です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var $listview = $(&amp;quot;

&amp;lt;ul&amp;gt;
  &amp;quot;).attr({&amp;quot;data-role&amp;quot;:&amp;quot;listview&amp;quot;, &amp;quot;data-inset&amp;quot;:&amp;quot;true&amp;quot;})
      .append(
        $(&amp;quot;

  &amp;lt;li&amp;gt;
    &amp;quot;).attr({&amp;quot;data-wrapperrels&amp;quot;:&amp;quot;div&amp;quot;, &amp;quot;data-iconpos&amp;quot;:&amp;quot;right&amp;quot;, &amp;quot;data-icon&amp;quot;:&amp;quot;arrow-l&amp;quot;})
            .append($(&amp;quot;&amp;lt;a&amp;gt;&amp;quot;).attr({&amp;quot;href&amp;quot;:&amp;quot;#&amp;quot;, &amp;quot;title&amp;quot;:&amp;quot;Home&amp;quot;, &amp;quot;data-rel&amp;quot;:&amp;quot;back&amp;quot;})
              .append($(&amp;quot;

    &amp;lt;h3&amp;gt;
      &amp;quot;).text(&amp;quot;FOO&amp;quot;))
                .append($(&amp;quot;&amp;quot;).attr({&amp;quot;class&amp;quot;:&amp;quot;ui-li-aside ui-li-desc&amp;quot;}).text(&amp;quot;BAR&amp;quot;))
              )
          ).appendTo(&amp;quot;:jqmData(role=content)&amp;quot;);
      ```



      &amp;lt;p&amp;gt;
        見慣れないと読みにくいかもしれませんが、インデントで階層構造が表現できて楽です。&amp;lt;br /&amp;gt;
        これで実際に作成されるHTMLは以下のようになります。
      &amp;lt;/p&amp;gt;


      ```



&amp;lt;ul data-role=&amp;quot;listview&amp;quot; data-inset=&amp;quot;true&amp;quot;&amp;gt;
  &amp;lt;li data-icon=&amp;quot;arrow-r&amp;quot; data-iconpos=&amp;quot;right&amp;quot; data-wrapperrels=&amp;quot;div&amp;quot;&amp;gt;
    &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;


    &amp;lt;h3&amp;gt;
      FOO
    &amp;lt;/h3&amp;gt;


    &amp;lt;p class=&amp;quot;ui-li-aside ui-li-desc&amp;quot;&amp;gt;
      BAR
              &amp;lt;/a&amp;gt;
          &amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;
      ```



      &amp;lt;p&amp;gt;
        なお、この形式のリストは公式ドキュメントでは「Formatted content」と呼ばれています。説明ページは下記。
      &amp;lt;/p&amp;gt;


      &amp;lt;p&amp;gt;
        [jQuery Mobile Docs - Lists with Form Controls](http://jquerymobile.com/test/docs/lists/lists-inset.html)
      &amp;lt;/p&amp;gt;


      &amp;lt;h3&amp;gt;
        DOM要素を変更＆挿入する
      &amp;lt;/h3&amp;gt;


      &amp;lt;p&amp;gt;
        ページの要素を書き換えます。
      &amp;lt;/p&amp;gt;


      ```

  $header.find(&amp;quot;h1&amp;quot;).html(&amp;quot;Injected&amp;quot;);
  $content.html($listview);

  $page.page();
  $content.find(&amp;quot;:jqmData(role=listview)&amp;quot;).listview();
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;p&amp;gt;
    「$page.page()」は、遅延してページ要素を編集した後には必ず呼び出さねばならないようです。&amp;lt;br /&amp;gt;
    その後、「$content.find(&amp;quot;:jqmData(role=listview)&amp;quot;).listview();」でリストビューをスタイリングしています。
  &amp;lt;/p&amp;gt;


  &amp;lt;h3&amp;gt;
    ページを表示する
  &amp;lt;/h3&amp;gt;


  &amp;lt;p&amp;gt;
    最後にページ遷移を手動で発生させます。&amp;lt;br /&amp;gt;
    これまでに編集したDOM要素が表示されます。
  &amp;lt;/p&amp;gt;


  ```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$.mobile.changePage($page);
```&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;h2&amp;gt;
    補足
  &amp;lt;/h2&amp;gt;


  &amp;lt;p&amp;gt;
    [公式ドキュメントのチュートリアル](http://jquerymobile.com/test/docs/pages/page-dynamic.html)ではここで紹介した内容にプラスして、「クリックしたボタンのhref属性を解析してデータ取得先を分ける」手順が説明されています。むしろその部分が長すぎて理解しづらくなっている気がします。
  &amp;lt;/p&amp;gt;


  &amp;lt;h2&amp;gt;
    参考
  &amp;lt;/h2&amp;gt;


  &amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;
      [jQuery Mobile Docs - Dynamically Injecting Pages](http://jquerymobile.com/test/docs/pages/page-dynamic.html)
      &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;
          公式のチュートリアル。長い。
        &amp;lt;/li&amp;gt;

      &amp;lt;/ul&amp;gt;

    &amp;lt;/li&amp;gt;


    &amp;lt;li&amp;gt;
      [jQuery Mobile Docs - Methods](http://jquerymobile.com/test/docs/api/methods.html)
      &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;
          $.mobile.changePage() のリファレンス。
        &amp;lt;/li&amp;gt;

      &amp;lt;/ul&amp;gt;

    &amp;lt;/li&amp;gt;


    &amp;lt;li&amp;gt;
      [jqmData | jQuery Mobile 1.1.0 日本語リファレンス](http://dev.screw-axis.com/doc/jquery_mobile/api/methods_utilities/methods/jqmData/)
      &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;
          カスタムセレクタ「jqmData」の説明。
        &amp;lt;/li&amp;gt;

      &amp;lt;/ul&amp;gt;

    &amp;lt;/li&amp;gt;


    &amp;lt;li&amp;gt;
      [リストビューについて | jQuery Mobile 1.1.0 日本語リファレンス](http://dev.screw-axis.com/doc/jquery_mobile/components/lists/docs/)
    &amp;lt;/li&amp;gt;


    &amp;lt;li&amp;gt;
      [jQuery Mobile: Organizing Information with List Views | Packt Publishing](http://www.packtpub.com/article/jquery-mobile-organizing-information-with-list-views)
      &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;
          公式ドキュメントのリストビューの解説ではコードが書いてありませんが、このページには書いています。
        &amp;lt;/li&amp;gt;

      &amp;lt;/ul&amp;gt;

    &amp;lt;/li&amp;gt;


    &amp;lt;li&amp;gt;
      [Building HTML (~= DOM) using jQuery - Stack Overflow](http://stackoverflow.com/questions/805159/building-html-dom-using-jquery)
      &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;
          jQueryのメソッドチェーンを使ってDOMを組み立てる方法。
        &amp;lt;/li&amp;gt;

      &amp;lt;/ul&amp;gt;

    &amp;lt;/li&amp;gt;

  &amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>jQuery Mobileのページ遷移時にイベントが発火する順番</title>
      <link>http://1000k.github.io/2012/10/14/order-in-which-the-event-is-fired-when-the-page-transition-of-jquery-mobile/</link>
      <pubDate>Sat, 13 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2012/10/14/order-in-which-the-event-is-fired-when-the-page-transition-of-jquery-mobile/</guid>
      <description>&lt;p&gt;ページ遷移持のイベントの発火タイミングをよくよく理解しておかなければ、jQuery Mobile を使いこなすことはできません。&lt;/p&gt;

&lt;p&gt;単純なページ間の遷移で発生するイベントの順番を確認しておきます。&lt;/p&gt;

&lt;p&gt;なお、イベント一覧は &lt;a href=&#34;http://jquerymobile.com/demos/1.2.0/docs/api/events.html&#34;&gt;jQuery Mobile Docs - Events&lt;/a&gt; に記されています。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;検証コード&#34;&gt;検証コード&lt;/h2&gt;

&lt;p&gt;コードはgistにも公開してあります。→&lt;a href=&#34;https://gist.github.com/3886193&#34;&gt;Verify the event firing timings of jQuery Mobile — Gist&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;page1-html&#34;&gt;page1.html&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;





&amp;lt;div data-role=&amp;quot;page&amp;quot; data-theme=&amp;quot;a&amp;quot; id=&amp;quot;page1&amp;quot;&amp;gt;
  &amp;lt;div data-role=&amp;quot;content&amp;quot;&amp;gt;
    &amp;lt;a href=&amp;quot;page2.html&amp;quot; data-role=&amp;quot;button&amp;quot;&amp;gt;Go to page2.html&amp;lt;/a&amp;gt;

  &amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;page2-html&#34;&gt;page2.html&lt;/h3&gt;

&lt;p&gt;page1 とほぼ同じなので、[data-role=&amp;ldquo;page&amp;rdquo;]ブロック内だけ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div data-role=&amp;quot;page&amp;quot; data-theme=&amp;quot;e&amp;quot; id=&amp;quot;page2&amp;quot;&amp;gt;
  &amp;lt;div data-role=&amp;quot;content&amp;quot;&amp;gt;
    &amp;lt;a href=&amp;quot;page1.html&amp;quot; data-role=&amp;quot;button&amp;quot;&amp;gt;Back to page1.html&amp;lt;/a&amp;gt;

  &amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;transition-js&#34;&gt;transition.js&lt;/h3&gt;

&lt;p&gt;イベント発火時にコンソールにイベント名が出るようにしています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Page load events
$(document).bind(&amp;quot;pagebeforeload&amp;quot;, function(e, data) {
  console.log(&amp;quot;pagebeforeload: &amp;quot; + data.url);
});
$(document).bind(&amp;quot;pageload&amp;quot;, function(e, data) {
  console.log(&amp;quot;pageload: &amp;quot; + data.url);
});
$(document).bind(&amp;quot;pageloadfailed&amp;quot;, function() { console.log(&amp;quot;pageloadfailed&amp;quot;); });

// Page change events
$(document).bind(&amp;quot;pagebeforechange&amp;quot;, function() { console.log(&amp;quot;pagebeforechange&amp;quot;); });
$(document).bind(&amp;quot;pagechange&amp;quot;, function() { console.log(&amp;quot;pagechange&amp;quot;); });
$(document).bind(&amp;quot;pagechangefailed&amp;quot;, function() { console.log(&amp;quot;pagechangefailed&amp;quot;); });

// Page transition events
$(document).bind(&amp;quot;pagebeforeshow&amp;quot;, function() { console.log(&amp;quot;pagebeforeshow&amp;quot;); });
$(document).bind(&amp;quot;pagebeforehide&amp;quot;, function() { console.log(&amp;quot;pagebeforehide&amp;quot;); });
$(document).bind(&amp;quot;pageshow&amp;quot;, function() { console.log(&amp;quot;pageshow&amp;quot;); });
$(document).bind(&amp;quot;pagehide&amp;quot;, function() { console.log(&amp;quot;pagehide&amp;quot;); });

// Page initialization events
$(document).bind(&amp;quot;pagebeforecreate&amp;quot;, function() { console.log(&amp;quot;pagebeforecreate&amp;quot;); });
$(document).bind(&amp;quot;pagecreate&amp;quot;, function() { console.log(&amp;quot;pagecreate&amp;quot;); });
$(document).bind(&amp;quot;pageinit&amp;quot;, function() { console.log(&amp;quot;pageinit&amp;quot;); });

// Page remove events
$(document).bind(&amp;quot;pageremove&amp;quot;, function() { console.log(&amp;quot;pageremove&amp;quot;); });
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;実験&#34;&gt;実験&lt;/h2&gt;

&lt;p&gt;「page1.html -&amp;gt; page2.html -&amp;gt; page1.html -&amp;gt; page2.html」という遷移をした時のコンソールログは以下です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// page1.html にアクセス
pagebeforechange
pagebeforecreate
pagecreate
pageinit
pagebeforeshow
pageshow
pagechange

// 「Go to page2.html」をクリック
pagebeforechange
pagebeforeload: http://localhost/page2.html
pagebeforecreate
pagecreate
pageinit
pageload: http://localhost/page2.html
pagebeforechange
pagebeforehide
pagebeforeshow
pagehide
pageshow
pagechange

// 「Back to page1.html」をクリック
pagebeforechange
pagebeforechange
pagebeforehide
pagebeforeshow
pageremove
pagehide
pageshow
pagechange

// もう一度「Go to page2.html」をクリック
pagebeforechange
pagebeforeload: http://localhost/page2.html
pagebeforecreate
pagecreate
pageinit
pageload: http://localhost/page2.html
pagebeforechange
pagebeforehide
pagebeforeshow
pagehide
pageshow
pagechange
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;考察&#34;&gt;考察&lt;/h2&gt;

&lt;p&gt;気付いた点をメモします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pagechange は全ての遷移の最後で発生する。&lt;/li&gt;
&lt;li&gt;page2.html に遷移するたびに pageinit が発火している。&lt;/li&gt;
&lt;li&gt;逆に、page1.html で pageinit が発火するのは最初のアクセス時のみ。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jquerymobile.com/demos/1.2.0/docs/pages/page-scripting.html&#34;&gt;jQuery Mobile Docs - Scripting pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jquerymobile.com/demos/1.2.0/docs/api/events.html&#34;&gt;jQuery Mobile Docs - Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Naotsugu/20120103/1325568080&#34;&gt;はじめての jQuery Mobile 1.0 ～その2：ページ遷移～ - etc9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>「要素をクリックする」命令をjQueryで書く</title>
      <link>http://1000k.github.io/2011/06/22/click-specific-element-by-jquery/</link>
      <pubDate>Wed, 22 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://1000k.github.io/2011/06/22/click-specific-element-by-jquery/</guid>
      <description>

&lt;p&gt;LightBoxのように、リンクをクリックするとアクションが発生するスクリプトは数多く存在します。&lt;/p&gt;

&lt;p&gt;任意の場所をクリックした時にそのアクションを起動したい場合は、jQueryの&lt;strong&gt;click()&lt;/strong&gt;メソッドを使うと簡単に実現できます。&lt;/p&gt;

&lt;h1 id=&#34;例&#34;&gt;例&lt;/h1&gt;

&lt;p&gt;classが&amp;rdquo;uso&amp;rdquo;のaリンクをクリックした時に &amp;ldquo;a#mojamoja&amp;rdquo; をクリックした時のアクション起動したい場合は、下記のように書けます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;$(function() {
    $(&amp;quot;a.uso&amp;quot;).click(function(e) {
        e.preventDefault();
        $(&amp;quot;a#mojamoja&amp;quot;).eq(0).click();
    });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;応用-悪用&#34;&gt;応用（悪用？）&lt;/h1&gt;

&lt;p&gt;FirebugやChromeのスクリプト入力ボックスに下記のコードを書き込むと、button#usoを永遠に毎秒10回叩き続けます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setInterval(function() {$(&amp;quot;button#uso&amp;quot;).eq(0).click();}, 100);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;「どうしてもボタンが連打したい。でも指が折れて動かせない…。」という名人にお勧めです。&lt;/p&gt;

&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://semooh.jp/jquery/api/events/click/_/&#34;&gt;click() - jQuery 日本語リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://semooh.jp/jquery/api/events/click/fn/&#34;&gt;click(fn) - jQuery 日本語リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tobysoft.net/wiki/index.php?JavaScript%2FjQuery%2Fready%A4%B8%A4%E3%A4%CA%A4%AF%A4%C6onload%A5%A4%A5%D9%A5%F3%A5%C8%A4%CB%B4%D8%BF%F4%A4%F2%C4%C9%B2%C3%A4%B7%A4%BF%A4%A4&#34;&gt;JavaScript/jQuery/readyじゃなくてonloadイベントに関数を追加したい - TOBY SOFT wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>